import React, { useState, useRef } from "react";
import styled from "styled-components";
import { Button } from "semantic-ui-react";
import AxiosInstance from "../AxiosConfig";
import CountryFlagUtil from "../CountryFlagUtil";
import { useHistory } from "react-router";

import GenreBarChart from "../components/GenreBarChart";
import TrackItem from "../components/TrackItem";
import ArtistGraph from "../components/ArtistGraph";
import TracksGraph from "../components/TracksGraph";
import TopFiveArtists from "../components/TopFiveArtists";

const countryFlag = new CountryFlagUtil();

const BaseContainer = styled.div`
  width: 100vw;
  min-height: 100vh;
  padding-right: 20vw;
  padding-left: 20vw;
  padding-top: 5vh;
  background-image: linear-gradient(360deg, black, grey);
`;

const HeadingContainer = styled.div`
  display: flex;
  color: white;
  justify-content: space-between;
  padding: 1em;
  box-shadow: 0 1px 3px 3px #fff;
  border-radius: 5px;
`;

const ProfileImage = styled.img`
  box-shadow: 0 0 0 3px white;
  border-radius: 50%;
  height: 150px;
  width: 150px;
`;

const HeaderProfileInfoContainer = styled.div`
  margin-left: 1vw;
`;

const ProfileContainer = styled.div`
  display: flex;
`;

const TopFiveContainer = styled.div`
  display: flex;
  margin-top: 5vh;
  color: white;
`;

const SpotivibeDisplayContainer = styled.div``;

const StatsContainerHeaderTop = styled.div`
  margin-top: 4vh;
  color: white;
`;

const QuoteTextBlock = styled.div`
  border-left-style: solid;
  border-left-color: white;
  padding-left: 1.3em;
`;

const AccountView = () => {
  const [loggedInUser, setLoggedInUser] = useState(null);
  const [loggedInUserCountry, setLoggedInUserCountry] = useState(null);
  const [historyLogFromRecentWeek, setHistoryLogFromRecentWeek] = useState(
    null
  );
  const [topFiveContainerDimensions, setTopFiveContainerDimensions] = useState(
    null
  );
  const topFiveContainerRef = useRef(null);
  const history = useHistory();

  const signOut = async () => {
    try {
      const result = await AxiosInstance.get("/logout");
      setLoggedInUser(null);
      setLoggedInUserCountry(null);
      if (result.status === 200) {
        history.push("/");
      }
    } catch (error) {
      console.log(error);
    }
  };

  const getCurrentLoggedInUser = async () => {
    try {
      const result = await AxiosInstance.get("/logged_in_user");
      setLoggedInUserCountry(
        countryFlag.getFlagFromCode(result.data.body.country)
      );
      setLoggedInUser(result.data.body);
      // console.log(result.data);
    } catch (error) {
      console.log(error);
    }
  };

  const getUserStats = async () => {
    try {
      const result = await AxiosInstance.get("/get_last_week_history");
      setHistoryLogFromRecentWeek(result.data);
    } catch (error) {
      console.log(error);
    }
  };

  React.useEffect(() => {
    getCurrentLoggedInUser();
    getUserStats();
  }, []);

  React.useEffect(() => {
    if (topFiveContainerRef.current) {
      const containerDimensions = topFiveContainerRef.current.getBoundingClientRect();
      setTopFiveContainerDimensions(containerDimensions);
    }
  }, [topFiveContainerRef, loggedInUser]);

  if (!loggedInUser) {
    return null;
  } else {
    console.log(historyLogFromRecentWeek);
    return (
      <BaseContainer>
        <HeadingContainer>
          <ProfileContainer>
            <ProfileImage src={loggedInUser.images[0].url} />
            <HeaderProfileInfoContainer>
              <h1>{loggedInUser.display_name}</h1>
              <h5>{loggedInUser.email}</h5>
              <p>
                {loggedInUser.product === "premium" ? "premium ðŸ˜Ž" : "free"}
              </p>
              <p>{`${loggedInUserCountry.name} ${loggedInUserCountry.emoji}`}</p>
            </HeaderProfileInfoContainer>
          </ProfileContainer>
          <Button inverted onClick={signOut} content="Sign Out" size="small" />
        </HeadingContainer>
        <SpotivibeDisplayContainer>
          {/* some kind of badge here */}
        </SpotivibeDisplayContainer>
        <StatsContainerHeaderTop>
          <h1>Last weeks listening statistics</h1>
          <p>More or less what you've been into the past week</p>
          <QuoteTextBlock>
            <p>
              This statistical data is generated by reading what you've recently
              played each day. Histograms are generated at the end of seven days
              and represent the frequency at which you listen to a track,
              artist, album, ect...
            </p>
          </QuoteTextBlock>
        </StatsContainerHeaderTop>
        <TopFiveContainer ref={topFiveContainerRef}>
          <TopFiveGraphs
            topFiveHistograms={historyLogFromRecentWeek.top_five}
            topFiveContainerDimensions={topFiveContainerDimensions}
          />
        </TopFiveContainer>
      </BaseContainer>
    );
  }
};

export default AccountView;

const TopFiveBaseContainer = styled.div`
  width: 100%;
`;

const TopFiveGraphs = () => {
  const [topFiveGraphs, setTopFiveGraphs] = useState(null);
  

  return <TopFiveBaseContainer></TopFiveBaseContainer>;
};
